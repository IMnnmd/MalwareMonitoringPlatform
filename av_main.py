import base64
import time
import av_report_parser

HEADER = 4
FORMAT = 'utf-8'


AV_list = {'AVP': 'SCAN;/i0',
           'ESET': '/no-quarantine;/adv-heur',
           'WinAV': '-Scan;-ScanType 3;-DisableRemediation;-File'}

REPORTS_PATH = 'D:\\машины\\Shared\\Reports\\'


def av_thread(filename, sock, report_handle):
    do_parse = True

    print(type(sock))
    if filename == 'QUIT':
        msg = 'QUIT'
        base64_msg = base64.b64encode(msg.encode(FORMAT))
        msg_len = len(base64_msg)
        sock.send(('{:<}'.format(msg_len, HEADER)).encode(FORMAT))
        time.sleep(0.05)
        sock.send(base64_msg)
        sock.close()
        return "QUIT"

    for av in AV_list:

        msg = f'{av};{AV_list[av]};{filename}.{av};{filename}'
        base64_msg = base64.b64encode(msg.encode(FORMAT))
        msg_len = len(base64_msg)
        sock.send(('{:<}'.format(msg_len, HEADER)).encode(FORMAT))
        time.sleep(0.1)
        sock.send(base64_msg)
        response = sock.recv(HEADER).decode(FORMAT)
        if response == 'ER-2':
            print('[AV]: File not found error')
            do_parse = False
            break

    if do_parse:
        results = av_report_parser.parse_results([filename + '.AVP', filename + '.ESET', filename + '.WinAV'], REPORTS_PATH)
        with open('Total reports.txt', 'a', encoding='utf-8') as file:
            report_handle[0] = {}
            for elem in results:
                report_handle[0].update({str(elem): str(results[elem])})
        print("[AV]: " + str(results))