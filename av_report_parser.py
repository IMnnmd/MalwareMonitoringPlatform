def parse_results(files, rep_path):
    results = {}
    for i in range(len(files)):
        with open(rep_path + files[i], 'r', encoding='utf-8') as f:
            if '.AVP' in files[i][-4:]:
                line = f.readline()
                while 'Time Finish:' not in line:
                    line = f.readline()
                total_objects = avp_get_num(f.readline())
                ok_objects = avp_get_num(f.readline())
                detected_objects = avp_get_num(f.readline())
                suspicious_objects = avp_get_num(f.readline())
                skipped_objects = avp_get_num(f.readline())
                if ok_objects == total_objects:
                    results.update({'AVP': 'Clean'})
                elif detected_objects > 0:
                    results.update({'AVP': 'Malicious'})
                elif suspicious_objects > 0:
                    results.update({'AVP': 'Suspicious'})
                elif skipped_objects > 0:
                    results.update({'AVP': 'Clean, some objects skipped'})
                else:
                    print('wrong smth')
            elif '.ESET' in files[i][-5:]:
                line = f.readline()
                while 'Всего: ' not in line:
                    line = f.readline()
                detected_objects = eset_get_num(f.readline())
                if detected_objects > 0:
                    results.update({'ESET': 'Malicious'})
                else:
                    results.update({'ESET': 'Clean'})
            elif '.WinAV' in files[i][-6:]:
                for _ in range(2):
                    f.readline()
                line = f.readline()
                if 'found no threats' in line:
                    results.update({'WinAV': 'Clean'})
                else:
                    results.update({'WinAV': 'Malicious'})
            else:
                print('wrong smth BIG')
    return results


def avp_get_num(line):
    delim_ind = line.find(':')
    return int(line[delim_ind + 1:].strip())


def eset_get_num(line):
    delim_ind = line.find('—')
    com_ind = line.find(',')
    return int(line[delim_ind+1:com_ind].strip())

