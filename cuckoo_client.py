import requests
import socket
import shutil
import base64
import time

# SHARED FOLDER SAMPLES PATH
NET_PATH = '/mnt/hgfs/Shared/Samples/'

# SHARED FOLDER REPORTS PATH
REPORT_PATH = '/mnt/hgfs/Shared/Reports/'

# CUCKOO REPORTS PATH
CUCKOO_REPORTS = '/home/cuckoo/.cuckoo/storage/analyses/'

HEADER = 4
FORMAT = 'utf-8'

REST_URL_CREATE_TASK = "http://localhost:8090/tasks/create/file"

REST_URL_TASK_REPORT = "http://localhost:8090/tasks/report/"

API_KEY = {"Authorization": "Bearer iSj7lKm0u3HY_-xk2vHJaQ"}

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.bind(('0.0.0.0', 4433))

sock.listen(3)


def process_msg(con, addr):
    msg_len = con.recv(HEADER)
    msg_len = msg_len.decode(FORMAT)
    if msg_len:
        msg = base64.b64decode(con.recv(int(msg_len))).decode('utf-8')
        return msg


def check_task_status(id):
    r = requests.get(REST_URL_TASK_REPORT + str(id), headers=API_KEY)
    return r


def do_scan(SAMPLE_FILE):
    print("Start scanning")
    with open(SAMPLE_FILE, "rb") as sample:
        files = {"file": (SAMPLE_FILE, sample)}
        r = requests.post(REST_URL_CREATE_TASK, headers=API_KEY, files=files)
    task_id = r.json()["task_id"]
    iterator = 300
    while True:
        res = check_task_status(task_id)
        if '200' in str(res):
            return task_id
        time.sleep(1)
        iterator -= 1
        if iterator == 0:
            break


def cpy_f(filename, task_id):
    global NET_PATH
    global REPORT_PATH
    try:
        print('Copying new report.')
        shutil.copyfile(CUCKOO_REPORTS + str(task_id) + "/reports/report.json", REPORT_PATH + filename + ".CUCKOO")
    except Exception:
        print('Error coyping')


if __name__ == '__main__':

    while True:
        print("Client ready for incoming files")
        con, addr = sock.accept()
        while con:
            res = process_msg(con, addr)
            if res == None:
                continue
            if res == 'QUIT':
                flag = True
                break
            print("Got message from server: " + str(res))
            task_id = do_scan(NET_PATH + str(res))
            if task_id == "ER-2":
                con.send(("ER-2").encode(FORMAT))
            else:
                cpy_f(str(res), task_id)
                con.send(("Next").encode(FORMAT))
            flag = True

        if flag:
            sock.close()
            break
